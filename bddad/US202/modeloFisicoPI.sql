drop table Utilizador;
create table utilizador(
    codUtilizador integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
    email varchar(50) not null,
    pass varchar(50) not null,
  PRIMARY KEY (codUtilizador)
);

drop table Clientes;
create table Clientes (
codInterno integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
tipo varchar(1) constraint nnTipoCliente NOT NULL,
nome varchar(100) constraint nnNomeCliente NOT NULL,
emailCliente varchar(255) constraint unEmailCliente UNIQUE,
plafond float constraint nnPlafondCliente NOT NULL,
nrFiscal integer constraint unNrFiscalCliente UNIQUE,
    constraint pk_CodInterno PRIMARY KEY (codInterno)
);
alter table Clientes add CONSTRAINT ckemailvalidation CHECK ( REGEXP_LIKE ( emailCliente, '^[A-Za-z]+[A-Za-z0-9.]+@[A-Za-z0-9.-]+.[A-Za-z]{2,4}$' ) );
alter table Clientes add constraint ckTipoCliente CHECK(tipo='P' OR tipo='E');
alter table Clientes add constraint ck_nrFiscal CHECK(REGEXP_LIKE(nrFiscal,'^[0-9]{9}$'));

drop table Moradas;
create table Moradas (
codMorada integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
rua varchar(100) constraint nnRuaMorada NOT NULL,
nrEdificio integer constraint nnNrEdificio NOT NULL,
andar integer,
porta varchar(100),
codPostal varchar(8) constraint nnCodPostal NOT NULL,
localidade varchar(100) constraint nnLocalidade NOT NULL,
pais varchar(100) constraint nnPais NOT NULL,
    constraint pk_CodMorada PRIMARY KEY (codMorada)
);
alter table Moradas add constraint  ckCodPostal CHECK(REGEXP_LIKE (codPostal, '^\d{4}(-\d{3})?$'));

drop table MoradasCorrespondencia;
create table MoradasCorrespondencia(
codInterno integer,
codMorada integer,
    constraint pk_MoradasCorrespondencia_CodInterno_CodMorada PRIMARY KEY (codInterno,codMorada)
);
alter table MoradasCorrespondencia add constraint fk_moradaCorrespondencia_CodInterno FOREIGN KEY (codInterno) references Clientes(codInterno);
alter table MoradasCorrespondencia add constraint fk_moradaCorrespondencia_CodMorada FOREIGN KEY (codMorada) references Moradas(codMorada);

drop table MoradasEntrega;
create table MoradasEntrega(
codInterno integer,
codMorada integer,
    constraint pk_MoradasEntrega_CodInterno_CodMorada PRIMARY KEY (codInterno,codMorada)
);
alter table MoradasEntrega add constraint fk_moradasEntrega_CodInterno FOREIGN KEY (codInterno) references Clientes(codInterno);
alter table MoradasEntrega add constraint fk_moradasEntrega_CodMorada FOREIGN KEY (codMorada) references Moradas(codMorada);

drop table Niveis;
create table Niveis(
codNivel integer,
designacaoNivel varchar(1) constraint nnDesignacaoNivel NOT NULL,
    constraint pk_codnivel PRIMARY KEY (codNivel)
);
alter table Niveis add constraint ckDesignacaoNivel CHECK(designacaoNivel='A' OR designacaoNivel='B' OR designacaoNivel='C');

drop table Clientes_Niveis;
create table Clientes_Niveis(
codInterno integer,
codNivel integer,
dataAtribuicao Date constraint nnDataAtribuicao NOT NULL,
    constraint pk_codInterno_codNivel PRIMARY KEY (codInterno, codNivel)
);
alter table Clientes_Niveis add constraint fk_clienteNivel_CodInterno FOREIGN KEY (codInterno) references Clientes(codInterno);
alter table Clientes_Niveis add constraint fk_clienteNivel_CodNivel FOREIGN KEY (codNivel) references Niveis (codNivel);

drop table Pedidos;
create table Pedidos(
codPedido integer,
codInterno integer,
valorTotal float constraint nnValorTotal NOT NULL,
dataPedido date constraint nnDataPedido NOT NULL,
dataVencimento date constraint nnDataVencimento NOT NULL,
    constraint pk_codPedido PRIMARY KEY (codPedido)
);
alter table Pedidos add constraint fk_pedidos_codInterno FOREIGN KEY (codInterno) references Clientes (codInterno);
alter table Pedidos add constraint ck_valorTotal CHECK(valorTotal>0);

drop table Pagamentos;
create table Pagamentos( 
codPagamento integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
dataPagamento date,
    constraint pk_codPagamento PRIMARY KEY (codPagamento)
);
drop table Colheitas;
create table Colheitas(
codColheita integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
anoColheita integer constraint nnAnoColheita NOT NULL,
    constraint pk_codColheita PRIMARY KEY (codColheita)
);
drop table Culturas;
create table Culturas(
codCultura integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
designacaoCultura varchar(50) constraint nnDesignacaoCultura NOT NULL,
tipoCultura varchar(1) constraint nnTipoCUltura NOT NULL,
objetivoCultura varchar(2) constraint nnObjetivoCultura NOT NULL, 
tempoCrescimento integer constraint nnTempoCrescimento NOT NULL,
    constraint pk_codCultura PRIMARY KEY (codCultura)
);
alter table Culturas add constraint ckTipoCultura CHECK(tipoCultura='P' OR tipoCultura='T' );
alter table Culturas add constraint ckobjetivoCultura CHECK(objetivoCultura ='A' OR objetivoCultura ='C' OR objetivoCultura='AC');

drop table Regas;
create table Regas(
codRega integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
codOperacao integer,
tempoRega integer constraint nnTempoRega NOT NULL,
    constraint pk_codRega PRIMARY KEY (codRega)
);
alter table Regas add constraint fk_regas_codOperacao FOREIGN KEY (codOperacao) references Operacoes (codOperacao);

drop table InstalacoesAgricolas;
create table InstalacoesAgricolas(
codInstalacaoAgricola integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
codMorada integer,
designacao varchar(50) constraint nnDesignacaoInstalacao NOT NULL,
    constraint pk_codInstalacaoAgricola PRIMARY KEY (codInstalacaoAgricola)
);
alter table InstalacoesAgricolas add constraint fk_InstalacoesAgricolas_codMorada FOREIGN KEY (codMorada) references Moradas (codMorada);

drop table ZonasGeograficas;
create table ZonasGeograficas(
codZonaGeografica integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
codInstalacaoAgricola integer,
designacaoZonaGeografica varchar(50) constraint nndesignacaoZonaGeografica NOT NULL,
    constraint pk_codZonaGeografica PRIMARY KEY (codZonaGeografica)
);
alter table ZonasGeograficas add constraint fk_ZonasGeograficas_CodInstalacaoAgricola FOREIGN KEY (codInstalacaoAgricola) references InstalacoesAgricolas (codInstalacaoAgricola);

drop table SetoresAgricolas;
create table SetoresAgricolas(
codSetorAgricola integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
codZonaGeografica integer,
codInstalacaoAgricola integer,
designacaoSetorAgricola varchar(50) constraint nnDesignacaoSetor NOT NULL,
areaSetorAgricola integer constraint nnAreaSetor NOT NULL,
    constraint pk_codSetorAgricola PRIMARY KEY (codSetorAgricola)
);
alter table SetoresAgricolas add constraint fk_SetoresAgricolas_CodZonaGeografica FOREIGN KEY (codZonaGeografica) references ZonasGeograficas (codZonaGeografica);
alter table SetoresAgricolas add constraint fk_SetoresAgricolas_CodInstalacaoAgricola FOREIGN KEY (codInstalacaoAgricola) references InstalacoesAgricolas (codInstalacaoAgricola);


drop table AplicacaoRegas;
create table AplicacaoRegas(
codRega integer,
codCultura integer,
codSetorAgricola integer,
tipoRega varchar(1) constraint nnTipoRega NOT NULL,
    constraint pk_codRega_codCultura_codSetorAgricola PRIMARY KEY (codRega,codCultura,codSetorAgricola)
);
alter table AplicacaoRegas add constraint fk_aplicacaoRegas_CodRega FOREIGN KEY (codRega) references Regas(codRega);
alter table AplicacaoRegas add constraint fk_aplicacaoRegas_CodCultura FOREIGN KEY (codCultura) references Culturas (codCultura);
alter table AplicacaoRegas add constraint fk_aplicacaoRegas_CodSetorAgricola FOREIGN KEY (codSetorAgricola) references SetoresAgricolas (codSetorAgricola);
alter table AplicacaoRegas add constraint ckTipoRega CHECK(tipoRega='G' OR tipoRega='B');

drop table Incidentes;
create table Incidentes(
codIncidente integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
codPedido integer,
codInterno integer,
codPagamento integer,
dataOcorrencia date constraint nnDataOcorrencia NOT NULL,
    constraint pk_codIncidente PRIMARY KEY (codIncidente)
);
alter table Incidentes add constraint fk_IncidentesCodPedido FOREIGN KEY (codPedido) references Pedidos (codPedido);
alter table Incidentes add constraint fk_IncidentesCodInterno FOREIGN KEY (codInterno) references Clientes(codInterno);
alter table Incidentes add constraint fk_IncidentescodPagamento FOREIGN KEY (codPagamento) references Pagamentos(codPagamento);


drop table Produtos;
create table Produtos(
codProduto integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
codCultura integer,
precoKg float constraint nnPrecoKg NOT NULL,
stockKg float constraint nnStockKg NOT NULL,
designacaoProduto varchar(50) constraint unDesignacaoProduto UNIQUE,
    constraint pk_codProduto PRIMARY KEY (codProduto)
);
alter table Produtos add constraint fk_Produtos_CodCultura FOREIGN KEY (codCultura) references Culturas (codCultura);


drop table Pedidos_Produtos;
create table Pedidos_Produtos(
codPedido integer,
codProduto integer,
quantidadeProduto float constraint nnQuantidadePedido NOT NULL,
precoPedido float constraint nnPrecoPedido NOT NULL,
    constraint pk_codPedido_codProduto PRIMARY KEY (codPedido, codProduto)
);
alter table Pedidos_Produtos add constraint fk_PedidosProdutos_CodPedido FOREIGN KEY (codPedido) references Pedidos (codPedido);
alter table Pedidos_Produtos add constraint fk_PedidosProdutos_CodInterno FOREIGN KEY (codProduto) references Produtos (codProduto);

drop table Entregas;
create table Entregas(
codEntrega integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
codMorada integer,
dataEntrega date,
    constraint pk_codEntrega PRIMARY KEY (codEntrega)
);
alter table Entregas add constraint fk_Entregas_CodEntrega FOREIGN KEY (codMorada) references Moradas (codMorada);

drop table Pedidos_Pagamentos_Entregas;
create table Pedidos_Pagamentos_Entregas(
codPedido integer,
codPagamento integer,
codEntrega integer,
estadoAtual varchar(1) constraint nnEstadoAtual NOT NULL,
    constraint pk_codPedido_codPagamento_codEntrega PRIMARY KEY (codPedido,codPagamento,codEntrega)
);
alter table Pedidos_Pagamentos_Entregas add constraint fk_Pedidos_Pagamentos_Entregas_CodPedido FOREIGN KEY (codPedido) references Pedidos (codPedido);
alter table Pedidos_Pagamentos_Entregas add constraint fk_Pedidos_Pagamentos_Entregas_CodPagamento FOREIGN KEY (codPagamento) references Pagamentos (codPagamento);
alter table Pedidos_Pagamentos_Entregas add constraint fk_Pedidos_Pagamentos_Entregas_CodEntrega FOREIGN KEY (codEntrega) references Entregas (codEntrega);
alter table Pedidos_Pagamentos_Entregas add constraint ck_estadoAtual CHECK(estadoAtual='R' OR estadoAtual='E' OR estadoAtual='P');

drop table Colheitas_Culturas;
create table Colheitas_Culturas(
codColheita integer,
codCultura integer,operacoes
valorTotalColheita float constraint nnValorTotalColheita NOT NULL,
    constraint pk_codColheita_codCultura PRIMARY KEY (codColheita,codCultura)
);
alter table Colheitas_Culturas add constraint fk_Colheitas_Culturas_CodColheita FOREIGN KEY (codColheita) references Colheitas (codColheita);
alter table Colheitas_Culturas add constraint fk_Colheitas_Culturas_codCultura FOREIGN KEY (codCultura) references Culturas (codCultura);
alter table Colheitas_Culturas add constraint ck_valorTotalColheita CHECK(valorTotalColheita>0);

drop table SetoresAgricolas_Culturas;
create table SetoresAgricolas_Culturas(
codSetorAgricola integer,
codCultura integer,
dataPlantacao date constraint nnDataPlantacao NOT NULL,
    constraint pk_codSetorAgricola_codCultura PRIMARY KEY (codSetorAgricola,codCultura,dataPlantacao)
);
alter table SetoresAgricolas_Culturas add constraint fk_SetoresAgricolas_Culturas_codSetorAgricola FOREIGN KEY (codSetorAgricola) references SetoresAgricolas (codSetorAgricola);
alter table SetoresAgricolas_Culturas add constraint fk_SetoresAgricolas_Culturas_codCultura FOREIGN KEY (codCultura) references Culturas (codCultura);

drop table PlanosAnuais;
create table PlanosAnuais(
anoPlanoAnual integer,
    constraint pk_anoPlanoAnual PRIMARY KEY (anoPlanoAnual)
);
drop table CalendariosOperacoes;
create table CalendariosOperacoes(
codCalendarioOperacoes integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
anoCalendarioOperacoes integer constraint unAnoCalendarioOperacoes UNIQUE,

    constraint pk_codCalendarioOperacoes PRIMARY KEY (codCalendarioOperacoes)
);
drop table Operacoes;
create table Operacoes(
codOperacao integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
anoPlanoAnual integer,
codSetorAgricola integer,
codCultura integer,
codCalendarioOperacoes integer,
dataPrevistaPlano date constraint nnDataPrevistaPlano NOT NULL,
dataOperacao date constraint nnDataOperacao NOT NULL,
tipoOperacao varchar(2) constraint nnTipoOperacao NOT NULL,
formaAplicacao varchar(2) constraint nnFormaAplicacao NOT NULL,
estadoOperacao varchar(1) constraint nnEstadoOperacao NOT NULL,
    constraint pk_codOperacao PRIMARY KEY (codOperacao)
);
alter table Operacoes add constraint fk_Operacoes_codSetorAgricola FOREIGN KEY (codSetorAgricola) references SetoresAgricolas (codSetorAgricola);
alter table Operacoes add constraint fk_Operacoes_codCultura FOREIGN KEY (codCultura) references Culturas (codCultura);
alter table Operacoes add constraint fk_Operacoes_anoPlanoAnual FOREIGN KEY (anoPlanoAnual) references PlanosAnuais (anoPlanoAnual);
alter table Operacoes add constraint fk_Operacoes_codCalendarioOperacoes FOREIGN KEY (codCalendarioOperacoes) references CalendariosOperacoes (codCalendarioOperacoes);
alter table Operacoes add constraint ck_formaAplicacao CHECK(formaAplicacao='F' OR formaAplicacao='FR' OR formaAplicacao='S');
alter table Operacoes add constraint ck_estadoOperacao CHECK(estadoOperacao='M' OR estadoOperacao='C');
alter table Operacoes add constraint ckTipoOperacao CHECK(tipoOperacao='I' OR tipoOperacao='A' OR tipoOperacao='FP');

drop table PlanosRega;
create table PlanosRega(
anoPlanoAnual integer,
codSetorAgricola integer,
codCultura integer,
codRega integer,
    constraint pk_anoPlanoAnual_codSetorAgricola_codCultura_codRega PRIMARY KEY (anoPlanoAnual,codSetorAgricola,codCultura,codRega)
);
alter table PlanosRega add constraint fk_PlanosRega_anoPlanoAnual FOREIGN KEY (anoPlanoAnual) references PlanosAnuais (anoPlanoAnual);
alter table PlanosRega add constraint fk_PlanosRega_codSetorAgricola FOREIGN KEY (codSetorAgricola) references SetoresAgricolas (codSetorAgricola);
alter table PlanosRega add constraint fk_PlanosRega_codCultura FOREIGN KEY (codCultura) references Culturas (codCultura);
alter table PlanosRega add constraint fk_PlanosRega_codRega FOREIGN KEY (codRega) references Regas (codRega);


drop table Culturas_Regas;
create table Culturas_Regas(
codCultura integer,
codRega integer,
tipoDistribuicao varchar(1) constraint nnTipoDistribuicao NOT NULL,
    constraint pk_codCultura_codRega PRIMARY KEY (codCultura,codRega)
);
alter table Culturas_Regas add constraint fk_Culturas_Regas_codCultura FOREIGN KEY (codCultura) references Culturas (codCultura);
alter table Culturas_Regas add constraint fk_Culturas_Regas_codRega FOREIGN KEY (codRega) references Regas (codRega);
alter table Culturas_Regas add constraint ck_tipoDistribuicao CHECK(tipoDistribuicao='A' OR tipoDistribuicao='G' OR tipoDistribuicao='P');

drop table PlanosAnuais_SetoresAgricolas;
create table PlanosAnuais_SetoresAgricolas(
anoPlanoAnual integer,
codSetorAgricola integer,
ordemRega integer constraint nnOrdemRega NOT NULL,
periodicidadeRegaSetor integer constraint nnPeriodicidadeRegaSetor NOT NULL,
    constraint pk_anoPlanoAnual_codSetorAgricola PRIMARY KEY (anoPlanoAnual,codSetorAgricola)
);
alter table PlanosAnuais_SetoresAgricolas add constraint fk_PlanosAnuais_SetoresAgricolas_anoPlanoAnual FOREIGN KEY (anoPlanoAnual) references PlanosAnuais (anoPlanoAnual);
alter table PlanosAnuais_SetoresAgricolas add constraint fk_PlanosAnuais_SetoresAgricolas_codSetorAgricola FOREIGN KEY (codSetorAgricola) references SetoresAgricolas (codSetorAgricola);



drop table AplicacaoFatorProducao;
create table AplicacaoFatorProducao(
codOperacao integer,
codFatorProducao integer,
codSetorAgricola integer,
codCultura integer,
qtFatorProducao float constraint nnQtFatorProducao NOT NULL,
    constraint pk_codOperacao_codFatorProducao_codSetorAgricola_codCultura PRIMARY KEY (codOperacao,codFatorProducao,codSetorAgricola,codCultura)
);
alter table AplicacaoFatorProducao add constraint fk_AplicacaoFatorProducao_codOperacao FOREIGN KEY (codOperacao) references Operacoes (codOperacao);
alter table AplicacaoFatorProducao add constraint fk_AplicacaoFatorProducao_codFatorProducao FOREIGN KEY (codFatorProducao) references FatoresProducao (codFatorProducao);
alter table AplicacaoFatorProducao add constraint fk_AplicacaoFatorProducao_codSetorAgricola FOREIGN KEY (codSetorAgricola) references SetoresAgricolas (codSetorAgricola);
alter table AplicacaoFatorProducao add constraint fk_AplicacaoFatorProducao_codCultura FOREIGN KEY (codCultura) references Culturas (codCultura);

drop table SetoresAgricolas_Colheitas_Culturas;
create table SetoresAgricolas_Colheitas_Culturas(
codSetorAgricola integer,
codColheita integer,
codCultura integer,
valorSetor float constraint nnValorSetor NOT NULL,
    constraint pk_codSetorAgricola_codColheita_codCultura PRIMARY KEY (codSetorAgricola,codColheita,codCultura)
);
alter table SetoresAgricolas_Colheitas_Culturas add constraint fk_SetoresAgricolas_Colheitas_Culturas_codSetorAgricola FOREIGN KEY (codSetorAgricola) references SetoresAgricolas (codSetorAgricola);
alter table SetoresAgricolas_Colheitas_Culturas add constraint fk_SetoresAgricolas_Colheitas_Culturas_codColheita FOREIGN KEY (codColheita) references Colheitas (codColheita);
alter table SetoresAgricolas_Colheitas_Culturas add constraint fk_SetoresAgricolas_Colheitas_Culturas_codCultura FOREIGN KEY (codCultura) references Culturas (codCultura);
alter table SetoresAgricolas_Colheitas_Culturas add constraint ck_valorSetor CHECK(valorSetor>0);

drop table Edificios;
create table Edificios(
codEdificio integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
codInstalacaoAgricola integer,
tipoEdificio varchar(1) constraint nnTipoEdificio NOT NULL,
    constraint pk_codEdificio PRIMARY KEY (codEdificio)
);
alter table Edificios add constraint fk_Edificios_codInstalacaoAgricola FOREIGN KEY (codInstalacaoAgricola) references InstalacoesAgricolas (codInstalacaoAgricola);
alter table Edificios add constraint ck_tipoEdificio CHECK(tipoEdificio='G' OR tipoEdificio='A' OR tipoEdificio='R' OR tipoEdificio='E');


drop table FatoresProducao;
create table FatoresProducao(
codFatorProducao integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
tipoFatorProducao varchar(2) constraint nntipoFatorProducao NOT NULL,
precoKg float constraint nnFPPrecoKg NOT NULL,
nomeComercial varchar(50) constraint unNomeComercial UNIQUE,
formulacao varchar(1) constraint nnFormulacao NOT NULL,
    constraint pk_codFatorProducao PRIMARY KEY (codFatorProducao)
);
alter table FatoresProducao add constraint ck_tipoFatorProducao CHECK(tipoFatorProducao='FE' OR tipoFatorProducao='AD' OR tipoFatorProducao='CO' OR tipoFatorProducao='FI');
alter table FatoresProducao add constraint ck_formulacao CHECK(formulacao='G' OR formulacao='L' OR formulacao='P');

drop table Restricoes;
create table Restricoes(
codZonaGeografica integer,
codFatorProducao integer,
dataInicio date,
duracao integer constraint nnduracao NOT NULL,
designacaoRestricao varchar(50) constraint nnDesignacaoRestricao NOT NULL,
    constraint pk_codZonaGeografica_codFatorProducao PRIMARY KEY (codZonaGeografica,codFatorProducao,dataInicio)
);
alter table Restricoes add constraint fk_Restricoes_codZonaGeografica FOREIGN KEY (codZonaGeografica) references ZonasGeograficas (codZonaGeografica);
alter table Restricoes add constraint fk_Restricoes_codFatorProducao FOREIGN KEY (codFatorProducao) references FatoresProducao (codFatorProducao);


drop table TiposSensores;
create table TiposSensores(
codTipoSensor varchar(2),
    constraint pk_codTipoSensor PRIMARY KEY (codTipoSensor)
);
alter table TiposSensores add constraint ck_codTipoSensor CHECK(codTipoSensor='HS' OR codTipoSensor='VV' OR codTipoSensor='PI'OR codTipoSensor='TS'OR codTipoSensor='TA'OR codTipoSensor='HA'OR codTipoSensor='PA');

drop table EstacoesMeteorologicas;
create table EstacoesMeteorologicas(
codEstacaoMeteorologica integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
codZonaGeografica integer,
    constraint pk_codEstacaoMeteorologica PRIMARY KEY (codEstacaoMeteorologica)
);
alter table EstacoesMeteorologicas add constraint fk_EstacoesMeteorologicas_codZonaGeografica FOREIGN KEY(codZonaGeografica) references ZonasGeograficas (codZonaGeografica);

drop table Sensores;
create table Sensores(
idSensor varchar(5),
codTipoSensor varchar(2),
codEstacaoMeteorologica integer,
valorReferencia integer constraint unValorReferencia UNIQUE,
    constraint pk_idSensor PRIMARY KEY (idSensor)
);
alter table Sensores add constraint fk_Sensores_codTipoSensor FOREIGN KEY (codTipoSensor) references TiposSensores (codTipoSensor);
alter table Sensores add constraint fk_Sensores_codEstacaoMeteorologica FOREIGN KEY (codEstacaoMeteorologica) references EstacoesMeteorologicas (codEstacaoMeteorologica);
alter table Sensores add constraint ck_valorReferencia CHECK(valorReferencia>0);

drop table Leituras;
create table Leituras(
codLeitura integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
idSensor varchar(5),
instanteLeitura date constraint nnInstanteLeitura NOT NULL,
valorLido integer constraint nnValorLido NOT NULL,
    constraint pk_codLeitura PRIMARY KEY (codLeitura)
);
alter table Leituras add constraint fk_Leitura_idSensor FOREIGN KEY (idSensor) references Sensores (idSensor);
alter table Leituras add constraint ck_valorLido CHECK(valorLido>=0 AND valorLido<=100);

drop table FichasTecnicas;
create table FichasTecnicas(
codFichaTecnica integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
codFatorProducao integer,
    constraint pk_codFichaTecnica primary key (codFichaTecnica)
);
alter table FichasTecnicas add constraint fk_Fichastecnicas_codFatorProducao foreign key (codFatorProducao) references FatoresProducao (codFatorProducao);

drop table Componentes;
create table Componentes(
codComponente integer GENERATED BY DEFAULT ON NULL AS IDENTITY,
substancia varchar(100) 
    constraint unSubstancia unique,
categoria varchar(50) constraint nnCategoria not null,
    constraint pk_codComponente primary key (codComponente)
);

drop table FichasTecnicas_Componentes;
create table FichasTecnicas_Componentes(
codFichaTecnica integer,
codComponente integer,
unidade varchar(20) constraint nnUnidade not null,
quantidade integer constraint nnQuantidade not null,
    constraint pk_codFichaTecnica_codComponente PRIMARY KEY (codFichaTecnica,codComponente)
);
alter table FichasTecnicas_Componentes add constraint fk_FichasTecnicas_Componentes_codFichaTecnica FOREIGN KEY (codFichaTecnica) references FichasTecnicas (codFichaTecnica);
alter table FichasTecnicas_Componentes add constraint fk_FichasTecnicas_Componentes_codComponentes FOREIGN KEY (codComponente) references Componentes (codComponente);

drop table input_sensor;
CREATE TABLE input_sensor(
input_string VARCHAR(25),
 constraint pkInput_sensor primary key (input_string)
);

drop table Pista_Auditoria;
create table Pista_Auditoria(
    cod_auditoria INTEGER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    user_ID VARCHAR(10) DEFAULT USER,
    tipo_alteracao VARCHAR(10) NOT NULL,
    alteracao VARCHAR(10) NOT NULL;
    data_hora DATE DEFAULT SYSDATE,
    constraint PK_PISTA_AUDITORIA primary key (cod_auditoria)
);